#!/usr/bin/env python3

import sys
from lexer import Lexer
from parser import Parser
from interpreter import Interpreter


class Orchestrator:
    def __init__(self):
        self.lexer = Lexer()
        self.parser = Parser()
        self.interpreter = Interpreter()

    def execute(self, code):
        self.lexer.load_source_code(code)
        self.lexer.process_source_code(code)

        self.parser.tokens = self.lexer.tokens
        ast = self.parser.parse()

        self.interpreter.interpret(ast)

    def interpret_file(self, filename):
        pass

    def run_repl(self):
        while True:
            sys.stdout.write('$ ')
            line = input()
            if line is None:
                break
            self.execute(line)


if __name__ == '__main__':
    if len(sys.argv) > 1:
        sys.stderr.write('Usage: osull [filename]')
        sys.exit(1)

    orchestrator = Orchestrator()

    if len(sys.argv) == 1:
        orchestrator.interpret_file(sys.argv[0])
    else:
        orchestrator.run_repl()
